version: '3.9'
services:
  backend:
    build:
      context: ./docker
      dockerfile: backend.Dockerfile
    ports:
      - '9000:9000'
    volumes:
      - ./backend:/go/src/myapp
    command: "air"
    depends_on:
      db:
        condition: service_healthy
    environment:
      TZ: Asia/Tokyo
    env_file:
      ./backend/.env
  frontend:
    image: node:20.12.2
    working_dir: /home/node/myapp
    ports:
      - '3000:3000'
    volumes:
      - ./frontend:/home/node/myapp
      - /home/node/myapp/node_modules
    command: "bash -c 'npm i && npm run dev'"
    environment:
      TZ: Asia/Tokyo
  db:
    build:
      context: ./docker
      dockerfile: mysql.Dockerfile
    volumes:
      - ./docker/mysql:/var/lib/mysql
      - ./mysql/my.cnf:/etc/mysql/conf.d/my.cnf
    ports:
      - '3306:3306'
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_DATABASE=training
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 5s
      retries: 10

  prism:
    image: stoplight/prism
    platform: linux/x86_64
    command: 'mock -h 0.0.0.0 -p 8000 /tmp/openapi.yaml'
    volumes:
      - ./backend/docs/swagger.yaml:/tmp/openapi.yaml
    ports:
      - '8000:8000'

  swagger-ui:
    image: swaggerapi/swagger-ui
    restart: always
    ports:
      - "8001:8080"
    volumes:
      - ./backend/docs/swagger.yaml:/openapi.yaml
    environment:
      SWAGGER_JSON: /openapi.yaml
      URLS: "[{name: \"/openapi.yaml\", url: \"/openapi.yaml\"}]"
  web:
    image: caddy:2.8.4-alpine
    restart: always
    expose:
      - "80"
    ports:
      - "80:80"
    depends_on:
      - backend
      - frontend
    volumes:
      - ./docker/caddy/Caddyfile:/etc/caddy/Caddyfile:ro
      - ./frontend:/usr/share/caddy:ro